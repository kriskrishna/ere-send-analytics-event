<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cvs.ews.ere.services.analytics-event</groupId>
    <artifactId>ere-analytics-event-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>ere-analytics-event-service</name>
    <description>Analytic Service to persist event from various sourcs to MariaDB</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.9.RELEASE</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud-contract.version>1.1.1.RELEASE</spring-cloud-contract.version>
        <!--<spring-cloud-bom.version>Dalston.SR5</spring-cloud-bom.version>-->
        <spring-cloud-bom.version>Edgware.RELEASE</spring-cloud-bom.version>
        <prometheus.version>0.0.21</prometheus.version>
        <!-- [PIPELINE] Stub group, artifact ids needed by Stub Runner -->
        <stubrunner.ids>com.cvs.ews.ere.services.qualificationservice</stubrunner.ids>
        <!-- [PIPELINE] -->
        <distribution.management.release.id>cvs-ews-ere-releases-local</distribution.management.release.id>
        <!-- [PIPELINE] -->
        <distribution.management.release.url>https://cicd-artifactoryoss-01.pcf-east.cvshealthcloud.com/artifactory/cvs-ews-ere-releases-local/
        </distribution.management.release.url>
        <!-- [PIPELINE] -->
        <repo.with.jars>https://cicd-artifactoryoss-01.pcf-east.cvshealthcloud.com/artifactory/cvs-ews-ere-releases-local/</repo.with.jars>
        <asciidoctorj.version>1.5.6</asciidoctorj.version>
        <asciidoctor.maven.plugin.version>1.5.6</asciidoctor.maven.plugin.version>
        <asciidoctorj.pdf.version>1.5.0-alpha.16</asciidoctorj.pdf.version>
        <maven.jacoco.plugin.version>0.7.9</maven.jacoco.plugin.version>
        <snippetsDirectory>${project.build.directory}/snippets</snippetsDirectory>
        <jruby.version>1.7.26</jruby.version>
    </properties>

    <modules>
        <module>star-data-jpa</module>
        <module>event-fact-processor</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>io.pivotal.spring.cloud</groupId>
            <artifactId>spring-cloud-services-starter-service-registry</artifactId>
        </dependency>
        <dependency>
            <groupId>com.toomuchcoding.jsonassert</groupId>
            <artifactId>jsonassert</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-rabbit</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.4.0</version>
        </dependency>

        <!-- DevOPs -->
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_hotspot</artifactId>
            <version>${prometheus.version}</version>
        </dependency>
        <!-- Exposition servlet -->
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_servlet</artifactId>
            <version>${prometheus.version}</version>
        </dependency>
        <!-- The client -->
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient</artifactId>
            <version>${prometheus.version}</version>
        </dependency>
        <!-- Spring Boot -->
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_spring_boot</artifactId>
            <version>${prometheus.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>spring-mock-mvc</artifactId>
            <version>2.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-contract-verifier</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.googlecode.junit-toolbox</groupId>
            <artifactId>junit-toolbox</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.cvs.ews.ere</groupId>
            <artifactId>common-model</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.pivotal.spring.cloud</groupId>
            <artifactId>cloudfoundry-certificate-truster</artifactId>
            <version>1.0.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-oauth2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-test-support</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-jdbc</artifactId>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>1.5.9.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.pivotal.spring.cloud</groupId>
                <artifactId>spring-cloud-services-dependencies</artifactId>
                <version>1.3.1.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.18.1</version>
                        <configuration>
                            <includes>
                                <include>**/*Tests.java</include>
                                <include>**/*Test.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/smoke/**</exclude>
                                <exclude>**/e2e/**</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                   <!-- <plugin>
                        <groupId>org.springframework.cloud</groupId>
                        <artifactId>spring-cloud-contract-maven-plugin</artifactId>
                        <version>${spring-cloud-contract.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <baseClassForTests>com.cvs.ews.ere.services.analytic-event.BaseClass</baseClassForTests>
                            <basePackageForTests>com.cvs.ews.ere.services.analytic-event.contracttests</basePackageForTests>
                        </configuration>
                    </plugin>-->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${maven.jacoco.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-report</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <version>${asciidoctor.maven.plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj-pdf</artifactId>
                                <version>${asciidoctorj.pdf.version}</version>
                            </dependency>
                            <!-- Comment this section to use the default jruby artifact provided by the plugin -->
                            <dependency>
                                <groupId>org.jruby</groupId>
                                <artifactId>jruby-complete</artifactId>
                                <version>${jruby.version}</version>
                            </dependency>
                            <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj</artifactId>
                                <version>${asciidoctorj.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <!-- Attributes common to all output formats -->
                            <attributes>
                                <endpoint-url>http://example.org</endpoint-url>
                                <sourcedir>${project.build.sourceDirectory}</sourcedir>
                                <project-version>${project.version}</project-version>
                            </attributes>
                        </configuration>
                        <!-- Multiple execution blocks allow to configure different input documents, output formats
                        or other configuration options -->
                        <executions>
                            <execution>
                                <id>asciidoc-usermanual-to-pdf</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <sourceDirectory>src/docs/asciidoc</sourceDirectory>
                                    <outputDirectory>target/generated-docs</outputDirectory>
                                    <doctype>book</doctype>
                                    <backend>pdf</backend>
                                    <!-- Since 1.5.0-alpha.9, PDF back-end can also use 'rouge' which provides more coverage
                                    for other languages like scala -->
                                    <sourceHighlighter>coderay</sourceHighlighter>
                                    <attributes>
                                        <pagenums/>
                                        <toc/>
                                        <idprefix/>
                                        <idseparator>-</idseparator>
                                        <snippets>${snippetsDirectory}</snippets>
                                    </attributes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>asciidoc-techdocs-to-html</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <sourceDirectory>src/docs/asciidoc</sourceDirectory>
                                    <outputDirectory>target/generated-docs</outputDirectory>
                                    <doctype>book</doctype>
                                    <backend>html5</backend>
                                    <sourceHighlighter>coderay</sourceHighlighter>
                                    <attributes>
                                        <imagesdir>./images</imagesdir>
                                        <toc>left</toc>
                                        <icons>font</icons>
                                        <sectanchors>true</sectanchors>
                                        <!-- set the idprefix to blank -->
                                        <idprefix/>
                                        <idseparator>-</idseparator>
                                        <docinfo1>true</docinfo1>
                                        <snippets>${snippetsDirectory}</snippets>
                                    </attributes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- [PIPELINE] -->
        <profile>
            <id>apicompatibility</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.18.1</version>
                        <configuration>
                            <includes>
                                <include>**/contracttests/**/*Tests.java</include>
                                <include>**/contracttests/**/*Test.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.cloud</groupId>
                        <artifactId>spring-cloud-contract-maven-plugin</artifactId>
                        <version>${spring-cloud-contract.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <contractsRepositoryUrl>${repo.with.jars}</contractsRepositoryUrl>
                            <contractDependency>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>${project.artifactId}</artifactId>
                                <classifier>stubs</classifier>
                                <version>${latest.production.version}</version>
                            </contractDependency>
                            <contractsPath>/</contractsPath>
                            <baseClassForTests>com.cvs.ews.ere.services.qualification.BaseClass</baseClassForTests>
                            <basePackageForTests>com.cvs.ews.ere.services.qualification.contracttests</basePackageForTests>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- [PIPELINE] -->
        <profile>
            <id>smoke</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.18.1</version>
                        <configuration>
                            <includes>
                                <include>smoke/**/*Tests.java</include>
                                <include>smoke/**/*Test.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- repositories>
        <repository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/release</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/release</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories-->

    <!-- [PIPELINE] -->
    <distributionManagement>
        <repository>
            <id>${distribution.management.release.id}</id>
            <name>cvs-ews-ere-releases-local</name>
            <url>${distribution.management.release.url}</url>
        </repository>
    </distributionManagement>
</project>
